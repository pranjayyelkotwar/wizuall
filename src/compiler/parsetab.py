
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMINUSleftPLUSMINUSleftMULTDIVAUX_END AUX_START COMMA DIV ELSE EQ ID IF LBRACE LBRACKET LPAREN MINUS MULT NUM PLUS RBRACE RBRACKET RPAREN WHILEprogram : statement_liststatement_list : statement_list statement\n                      | statementstatement : assignment\n                 | conditional\n                 | while_loop\n                 | function_call\n                 | auxiliary\n                 | expressionassignment : ID EQ expressionexpression : expression PLUS term\n                  | expression MINUS term\n                  | termterm : term MULT factor\n            | term DIV factor\n            | factorfactor : NUM\n              | ID\n              | LPAREN expression RPAREN\n              | MINUS factor %prec UMINUS\n              | LBRACKET list_elements RBRACKETlist_elements : list_elements COMMA expression\n                     | expressionconditional : IF LPAREN expression RPAREN LBRACE statement_list RBRACE\n                   | IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACEwhile_loop : WHILE LPAREN expression RPAREN LBRACE statement_list RBRACEfunction_call : ID LPAREN arg_list_opt RPARENarg_list_opt : arg_list\n                    | emptyarg_list : expression\n                | expression COMMA arg_listempty :auxiliary : AUX_START aux_code AUX_ENDaux_code : empty'
    
_lr_action_items = {'ID':([0,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,24,25,27,28,31,32,33,36,37,38,44,46,47,48,49,50,51,52,57,58,59,60,61,62,64,65,66,],[10,10,-3,-4,-5,-6,-7,-8,-9,-18,27,-13,27,-16,-17,27,-2,27,27,27,27,27,-18,27,27,27,-20,-11,-12,-10,-19,-33,-14,-15,-21,27,-27,27,10,10,10,10,-24,-26,10,10,-25,]),'IF':([0,2,3,4,5,6,7,8,9,10,15,17,18,20,27,33,36,37,38,44,46,47,48,49,51,57,58,59,60,61,62,64,65,66,],[11,11,-3,-4,-5,-6,-7,-8,-9,-18,-13,-16,-17,-2,-18,-20,-11,-12,-10,-19,-33,-14,-15,-21,-27,11,11,11,11,-24,-26,11,11,-25,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,15,17,18,20,27,33,36,37,38,44,46,47,48,49,51,57,58,59,60,61,62,64,65,66,],[13,13,-3,-4,-5,-6,-7,-8,-9,-18,-13,-16,-17,-2,-18,-20,-11,-12,-10,-19,-33,-14,-15,-21,-27,13,13,13,13,-24,-26,13,13,-25,]),'AUX_START':([0,2,3,4,5,6,7,8,9,10,15,17,18,20,27,33,36,37,38,44,46,47,48,49,51,57,58,59,60,61,62,64,65,66,],[14,14,-3,-4,-5,-6,-7,-8,-9,-18,-13,-16,-17,-2,-18,-20,-11,-12,-10,-19,-33,-14,-15,-21,-27,14,14,14,14,-24,-26,14,14,-25,]),'NUM':([0,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,24,25,27,28,31,32,33,36,37,38,44,46,47,48,49,50,51,52,57,58,59,60,61,62,64,65,66,],[18,18,-3,-4,-5,-6,-7,-8,-9,-18,18,-13,18,-16,-17,18,-2,18,18,18,18,18,-18,18,18,18,-20,-11,-12,-10,-19,-33,-14,-15,-21,18,-27,18,18,18,18,18,-24,-26,18,18,-25,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,27,28,31,32,33,36,37,38,44,46,47,48,49,50,51,52,57,58,59,60,61,62,64,65,66,],[12,12,-3,-4,-5,-6,-7,-8,-9,24,25,12,28,-13,12,-16,-17,12,-2,12,12,12,12,12,-18,12,12,12,-20,-11,-12,-10,-19,-33,-14,-15,-21,12,-27,12,12,12,12,12,-24,-26,12,12,-25,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,33,35,36,37,38,42,43,44,45,46,47,48,49,50,51,52,55,57,58,59,60,61,62,64,65,66,],[16,16,-3,-4,-5,-6,-7,-8,22,-18,16,-13,16,-16,-17,16,-2,16,16,16,16,16,22,-18,16,16,16,-20,22,-11,-12,22,22,22,-19,22,-33,-14,-15,-21,16,-27,16,22,16,16,16,16,-24,-26,16,16,-25,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,12,15,16,17,18,19,20,21,22,23,24,25,27,28,31,32,33,36,37,38,44,46,47,48,49,50,51,52,57,58,59,60,61,62,64,65,66,],[19,19,-3,-4,-5,-6,-7,-8,-9,-18,19,-13,19,-16,-17,19,-2,19,19,19,19,19,-18,19,19,19,-20,-11,-12,-10,-19,-33,-14,-15,-21,19,-27,19,19,19,19,19,-24,-26,19,19,-25,]),'$end':([1,2,3,4,5,6,7,8,9,10,15,17,18,20,27,33,36,37,38,44,46,47,48,49,51,61,62,66,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-18,-13,-16,-17,-2,-18,-20,-11,-12,-10,-19,-33,-14,-15,-21,-27,-24,-26,-25,]),'RBRACE':([3,4,5,6,7,8,9,10,15,17,18,20,27,33,36,37,38,44,46,47,48,49,51,59,60,61,62,65,66,],[-3,-4,-5,-6,-7,-8,-9,-18,-13,-16,-17,-2,-18,-20,-11,-12,-10,-19,-33,-14,-15,-21,-27,61,62,-24,-26,66,-25,]),'PLUS':([9,10,15,17,18,26,27,33,35,36,37,38,42,43,44,45,47,48,49,55,],[21,-18,-13,-16,-17,21,-18,-20,21,-11,-12,21,21,21,-19,21,-14,-15,-21,21,]),'EQ':([10,],[23,]),'MULT':([10,15,17,18,27,33,36,37,44,47,48,49,],[-18,31,-16,-17,-18,-20,31,31,-19,-14,-15,-21,]),'DIV':([10,15,17,18,27,33,36,37,44,47,48,49,],[-18,32,-16,-17,-18,-20,32,32,-19,-14,-15,-21,]),'AUX_END':([14,29,30,],[-32,46,-34,]),'RPAREN':([15,17,18,24,26,27,33,36,37,39,40,41,42,43,44,45,47,48,49,56,],[-13,-16,-17,-32,44,-18,-20,-11,-12,51,-28,-29,-30,53,-19,54,-14,-15,-21,-31,]),'RBRACKET':([15,17,18,27,33,34,35,36,37,44,47,48,49,55,],[-13,-16,-17,-18,-20,49,-23,-11,-12,-19,-14,-15,-21,-22,]),'COMMA':([15,17,18,27,33,34,35,36,37,42,44,47,48,49,55,],[-13,-16,-17,-18,-20,50,-23,-11,-12,52,-19,-14,-15,-21,-22,]),'LBRACE':([53,54,63,],[57,58,64,]),'ELSE':([61,],[63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,57,58,64,],[2,59,60,65,]),'statement':([0,2,57,58,59,60,64,65,],[3,20,3,3,20,20,3,20,]),'assignment':([0,2,57,58,59,60,64,65,],[4,4,4,4,4,4,4,4,]),'conditional':([0,2,57,58,59,60,64,65,],[5,5,5,5,5,5,5,5,]),'while_loop':([0,2,57,58,59,60,64,65,],[6,6,6,6,6,6,6,6,]),'function_call':([0,2,57,58,59,60,64,65,],[7,7,7,7,7,7,7,7,]),'auxiliary':([0,2,57,58,59,60,64,65,],[8,8,8,8,8,8,8,8,]),'expression':([0,2,12,19,23,24,25,28,50,52,57,58,59,60,64,65,],[9,9,26,35,38,42,43,45,55,42,9,9,9,9,9,9,]),'term':([0,2,12,19,21,22,23,24,25,28,50,52,57,58,59,60,64,65,],[15,15,15,15,36,37,15,15,15,15,15,15,15,15,15,15,15,15,]),'factor':([0,2,12,16,19,21,22,23,24,25,28,31,32,50,52,57,58,59,60,64,65,],[17,17,17,33,17,17,17,17,17,17,17,47,48,17,17,17,17,17,17,17,17,]),'aux_code':([14,],[29,]),'empty':([14,24,],[30,41,]),'list_elements':([19,],[34,]),'arg_list_opt':([24,],[39,]),'arg_list':([24,52,],[40,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',28),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',33),
  ('statement -> assignment','statement',1,'p_statement','parser.py',40),
  ('statement -> conditional','statement',1,'p_statement','parser.py',41),
  ('statement -> while_loop','statement',1,'p_statement','parser.py',42),
  ('statement -> function_call','statement',1,'p_statement','parser.py',43),
  ('statement -> auxiliary','statement',1,'p_statement','parser.py',44),
  ('statement -> expression','statement',1,'p_statement','parser.py',45),
  ('assignment -> ID EQ expression','assignment',3,'p_assignment','parser.py',49),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',54),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',55),
  ('expression -> term','expression',1,'p_expression','parser.py',56),
  ('term -> term MULT factor','term',3,'p_term','parser.py',65),
  ('term -> term DIV factor','term',3,'p_term','parser.py',66),
  ('term -> factor','term',1,'p_term','parser.py',67),
  ('factor -> NUM','factor',1,'p_factor','parser.py',74),
  ('factor -> ID','factor',1,'p_factor','parser.py',75),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',76),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',77),
  ('factor -> LBRACKET list_elements RBRACKET','factor',3,'p_factor','parser.py',78),
  ('list_elements -> list_elements COMMA expression','list_elements',3,'p_list_elements','parser.py',90),
  ('list_elements -> expression','list_elements',1,'p_list_elements','parser.py',91),
  ('conditional -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE','conditional',7,'p_conditional','parser.py',98),
  ('conditional -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE ELSE LBRACE statement_list RBRACE','conditional',11,'p_conditional','parser.py',99),
  ('while_loop -> WHILE LPAREN expression RPAREN LBRACE statement_list RBRACE','while_loop',7,'p_while_loop','parser.py',111),
  ('function_call -> ID LPAREN arg_list_opt RPAREN','function_call',4,'p_function_call','parser.py',118),
  ('arg_list_opt -> arg_list','arg_list_opt',1,'p_arg_list_opt','parser.py',187),
  ('arg_list_opt -> empty','arg_list_opt',1,'p_arg_list_opt','parser.py',188),
  ('arg_list -> expression','arg_list',1,'p_arg_list','parser.py',192),
  ('arg_list -> expression COMMA arg_list','arg_list',3,'p_arg_list','parser.py',193),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',200),
  ('auxiliary -> AUX_START aux_code AUX_END','auxiliary',3,'p_auxiliary','parser.py',204),
  ('aux_code -> empty','aux_code',1,'p_aux_code','parser.py',211),
]
